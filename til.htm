---
layout: default
title: Anuradha Kumari
pageTitle: Quick tips and tricks
permalink: /quicktips/
is_home_btn_reqd: "True"
is_project_btn_reqd: "False"
---

<section class="til">
  <h2>Sharing my everyday learnings</h2>

<p>This page will contain all the learnings and related resources which might be helpful for me in future as a quick reference. 
  Sharing in public, in case anyone else finds it useful.</p>
  <ul class="til-list">
    
    <li  class="accordion" id="ac-5">  
      <h3>
        <button onclick=toggle('ac-5')><i class="fa fa-plus-square-o" aria-hidden="true"></i>
          vscode-jest-snippets
        </button>
      </h3>
      <div  aria-hidden="true" class="collapsible-ele hide">
        <div class="blog-date">
          <i class="fa fa-calendar" aria-label="Published on" title="Published on"></i>
          <time datetime="09/08/2020">8 September 2020</time>
        </div>
<!--         <div class="blog-tags"><i class="fa fa-tags" aria-label="Tags" title="Tags"></i>yarn, resolution, packagejson </div> -->
        <div>
          <div>
            Today I discovered <a href="https://facebook.github.io/jest" target="_blank">Jest</a> snippet extension for Visual Studio Code. 
            
            <p>
              As I am an advocate of writing unit test cases, I find myself writing unit tests pretty frequently. 
              Currently I am working in a project which uses React for development and Jest for unit testing the code. 
              When writing test cases, we add each test case under <code>it</code>. But when typing <strong>it</strong>
              VS Code always autocompletes to <strong>instanceof</strong> and I had to rename it. 
              So I googled on how to fix that and hit the stackoverflow link with exact issue solved with help of the extension 
              <a href="https://marketplace.visualstudio.com/items?itemName=andys8.jest-snippets">vscode-jest-snippets</a>.
              
            </p>
            
          </div>
           <div>
              <strong>Reference:</strong>
              <a href="https://stackoverflow.com/questions/63696524/how-to-get-vscode-to-autocomplete-it-instead-of-instanceof-for-jest-for-reac/63791628#63791628" target="_blank">Stack overflow link</a>
          </div>
        </div>
    </li>
    
     <li  class="accordion" id="ac-4">  
      <h3>
        <button onclick=toggle('ac-4')><i class="fa fa-plus-square-o" aria-hidden="true"></i>Transient props in Styled Components</button>
      </h3>
      <div  aria-hidden="true" class="collapsible-ele hide">
        <div class="blog-date">
          <i class="fa fa-calendar" aria-label="Published on" title="Published on"></i>
          <time datetime="08/26/2020">26 August 2020</time>
        </div>
<!--         <div class="blog-tags"><i class="fa fa-tags" aria-label="Tags" title="Tags"></i>yarn, resolution, packagejson </div> -->
        <div>
          <div>
            Today I learnt about <code>transient props</code> in <a href="https://styled-components.com/" target="_blank">Styled Components</a>. 
            
            <p>
             <strong>Issue:</strong> When creating a styled component with a prop which is similar to an existing HTML attribute, that prop gets passed through 
              to the underlying DOM element as a corresponding attribute. We could handle it by renaming that prop to not match any existing HTML attribute. 
              This new props now enables us to pass the same props with <code>$</code> prefixed to them, and styled components will know not to pass these to the rendered DOM element nor pass it further down the component hierarchy. 
            </p>
            
          </div>
           <div>
              <strong>Reference:</strong>
             <ul>
               <li>
                 <a href="https://github.com/styled-components/styled-components/issues/3220" target="_blank">Styled component github issues</a>
               </li>
               <li>
                 <a href="https://medium.com/@probablyup/introducing-transient-props-f35fd5203e0c" target="_blank">Read the detailed proposal on Medium</a>
               </li>
             </ul>  
          </div>
        </div>
    </li>
    
    <li  class="accordion" id="ac-3">  
      <h3>
        <button onclick=toggle('ac-3')><i class="fa fa-plus-square-o" aria-hidden="true"></i>HTML &lt;abbr&gt; tag</button>
      </h3>
      <div  aria-hidden="true" class="collapsible-ele hide">
        <div class="blog-date">
          <i class="fa fa-calendar" aria-label="Published on" title="Published on"></i>
          <time datetime="08/17/2020">17 August 2020</time>
        </div>
<!--         <div class="blog-tags"><i class="fa fa-tags" aria-label="Tags" title="Tags"></i>yarn, resolution, packagejson </div> -->
        <div>
          <div>
            Today I learnt that we have a HTML tag for abbreviations. As per MDN,
            <quote>
              The HTML Abbreviation element (&lt;abbr&gt;) represents an abbreviation or acronym; the optional title attribute can provide an expansion or description for the abbreviation. If present, title must contain this full description and nothing else.
            </quote>
            <p>
              By default, the text under this element has a style set to <code>text-decoration: underline dotted;</code>
              <br />
              We can have custom styles on it and can set the text-decoration to <code>none</code> to remove that dotted underline on it.
              I created a simple <a href="https://codepen.io/anuradha15/pen/zYqBBYv" source="_blank">codepen example</a> to see how this element works.
            </p>
            
          </div>
           <div>
              <strong>Read more:</strong> <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr" target="_blank">MDN documentation on abbr tag</a>
          </div>
        </div>
    </li>
    
    <li  class="accordion" id="ac-2">  
      <h3>
        <button onclick=toggle('ac-2')><i class="fa fa-plus-square-o" aria-hidden="true"></i>Activate same-width numbers for a font</button>
      </h3>
      <div  aria-hidden="true" class="collapsible-ele hide">
        <div class="blog-date">
          <i class="fa fa-calendar" aria-label="Published on" title="Published on"></i>
          <time datetime="08/14/2020">14 August 2020</time>
        </div>
<!--         <div class="blog-tags"><i class="fa fa-tags" aria-label="Tags" title="Tags"></i>yarn, resolution, packagejson </div> -->
        <div>
          <div>
            Today I learnt that we have css properties - <code>font-variant-numeric</code> and <code>font-feature-setting</code> which allow us 
            to enable same width on the numbers for a font.
            <p>
                <strong>Source:</strong> <a href="https://twitter.com/sulco/status/1293862293139337217" target="_blank">Twitter post on it</a>
            </p>
            
          </div>
           <div>
          There are some cool things we can achieve using these. </p>
          <strong>Read more</strong> on <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-feature-settings">font-feature-settings</a> and 
          <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-numeric">font-variant-numeric</a>
          </div>
        </div>
    </li>
    
    <li  class="accordion" id="ac-1">  
      <h3>
        <button onclick=toggle('ac-1')><i class="fa fa-plus-square-o" aria-hidden="true"></i>Add resolutions to package.json</button>
      </h3>
      <div  aria-hidden="true" class="collapsible-ele hide">
        <div class="blog-date">
          <i class="fa fa-calendar" aria-label="Published on" title="Published on"></i>
          <time datetime="08/12/2020">11 August 2020</time>
        </div>
<!--         <div class="blog-tags"><i class="fa fa-tags" aria-label="Tags" title="Tags"></i>yarn, resolution, packagejson </div> -->
        <div>
          <strong>What was the issue?</strong> <br />
          <p>
          One of the sub-dependencies of my project got updated unintentionally to incorrect version (after running yarn upgrade on a dependency).
          To fix this, we had to add a resolution for the sub-dependecy to prevent it from causing any issues the release.
          </p>
          <p>
          Now, I heard this term <i>add resolution</i> for the first time, and had no idea what to do. So I followed the (dev) religious practice and googled about it. 
          Thankfully, I got the helpful link in the first attempt itself (what a relief!)
          </p>
      </div>
        <div>
          <strong>The solution I found:</strong>
          <br />          
          In a nutshell, I followed below steps: 
          <ol>
            <li> Deleted the package lock file created</li>
            <li> 
              Added a resolutions entry in the package.json for the sub-dependency
              <pre>
  {
    "dependencies": {
      "package-1": "2.3.1",
      "package-2": "3.1.7",
    }
    "resolutions": {
      /** because I upgraded package-1 and it had package-2 as dependency 
        * which got upgraded to a higher version which we did not want */
      "package-2": "3.1.7"  
     }
  }
              </pre>
            </li>
            <li>Re-run yarn upgrade command for package-1, and this time it does not increment the sub-dependency version. Problem solved!</li>
          </ol>
          
          <div>
          <br />
          Reference link: <a href="https://classic.yarnpkg.com/en/docs/selective-version-resolutions/" target="_blank">Read about selective dependency resolutions here</a>
          </div>
        </div>
      </div>
    </li>   
    
  </ul>
  
  <script>
    function toggle(id){
      var parentElement=document.getElementById(id);
      var icon = parentElement.querySelector('button .fa');
      var collapsibleDiv = parentElement.querySelector('.collapsible-ele');
      var isHidden = collapsibleDiv.getAttribute('aria-hidden');

      if(isHidden == 'true') {
        collapsibleDiv.setAttribute('class', 'collapsible-ele show');
        collapsibleDiv.setAttribute('aria-hidden', false);
        icon.setAttribute('class', 'fa fa-minus-square-o');
      } else {
        collapsibleDiv.setAttribute('class', 'collapsible-ele hide');
        collapsibleDiv.setAttribute('aria-hidden', true);
        icon.setAttribute('class', 'fa fa-plus-square-o');
      }
    }
  </script>
</section>
